#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB                  &kp Q         &kp L         &kp U                          &kp COMMA                                                                 &kp F        &kp W  &kp R  &kp Y  &kp P
&kp LEFT_GUI             &kp E         &kp I         &kp A                          &kp O        &mkp MB3                         &lt_to_layer_0 2 MINUS      &kp K        &kp T  &kp N  &kp S  &kp H
&mt LEFT_SHIFT QUESTION  &kp Z         &kp X         &kp C                          &kp V        &kp PERIOD                       &lt_to_layer_0 3 SEMICOLON  &kp G        &kp D  &kp M  &kp J  &kp B
&kp LEFT_CONTROL         &msc SCRL_UP  &kp LEFT_ALT  &lt_to_layer_0 3 INT_MUHENKAN  &lt 6 SPACE  &lt_to_layer_0 4 INT_HENKAN      &kp BACKSPACE               &lt 1 ENTER                       &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans              &trans                                              &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans              &trans            &trans                   &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans              &trans            &trans                   &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&msc SCRL_UP          &kp N7        &kp N8        &kp N9        &kp MINUS                                                &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&msc SCRL_LEFT        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE   &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0     &kp EQUAL                    &kp PRINTSCREEN  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&kp LCTRL             &kp N0        &kp PERIOD    &trans        &trans     &trans                       &trans           &trans                                                                     &kp PIPE
            >;
        };

        MOUSE {
            bindings = <
&trans          &trans  &trans  &trans    &trans                                    &trans  &trans    &trans    &trans    &trans
&msc SCRL_DOWN  &trans  &trans  &mkp MB1  &msc SCRL_UP     &trans           &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&msc SCRL_LEFT  &trans  &trans  &trans    &msc SCRL_RIGHT  &lt 0 SPACE      &trans  &trans  &trans    &trans    &trans    &trans
&trans          &trans  &trans  &trans    &trans           &trans           &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans        &trans                              &trans  &trans          &trans           &trans  &trans
&trans  &trans  &trans  &msc SCRL_UP  &msc SCRL_DOWN  &trans      &trans  &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans        &trans          &trans      &trans  &trans  &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans        &trans          &trans      &trans  &trans                                           &trans
            >;
        };

        CAD {
            bindings = <
&kp ESCAPE        &kp N7     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9                      &trans  &trans  &trans  &trans  &trans
&kp DELETE        &kp SPACE  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT    &kp S      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp N0     &kp PERIOD    &trans        &trans        &trans      &trans  &trans                          &trans
            >;
        };
    };
};
